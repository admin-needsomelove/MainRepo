main schema
username : passwd : type : payment_info: details(like age, name, email summary , video_link, photo_links)

friends table
partition sort key
username: friends

getProfileList(token)
getProfileDetails(token,username)
updateCustomerType(token, type)
updateName(token, name)
updateAge(token, age)
updateEmail(token, email)
updateDescription(token, description)
updatePhotos(token, photo_links)
updateVideo(token video_link)
getAccountDetails(token)
addFriend(token , user)


chat API's


#generate send and verify a token based on username apssword and secret using public key crypto
signUp(username,password)
signin(username,password)


#chat service
sendMessage(token, message)

we would need to use web socket api gateway nd ddb and lambda architecture 
ddb inserts of new messages will release a stream wihich will be sent to connected clients
https://www.freecodecamp.org/news/real-time-applications-using-websockets-with-aws-api-gateway-and-lambda-a5bb493e9452/
https://medium.com/@budilov/build-a-react-native-chat-app-on-aws-part-2-dynamodb-5ea1b965bb05

ddb schema
userId , connectionId